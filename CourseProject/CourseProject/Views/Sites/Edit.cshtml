@model CourseProject.Models.DetailsViewModel
@using Resources
@{
    ViewBag.Title = Model.SiteName;
    Layout = null;
}
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>@ViewBag.Title – WebsiteMaker</title>

        <link rel="stylesheet" href="~/Content/themes/base/all.css" />
        <link rel="stylesheet" href="~/Scripts/mediaelement/mediaelementplayer.css" />

        @Styles.Render("~/Content/users-styles")
        @Styles.Render("~/Content/" + Model.Theme + ".css")
        @Styles.Render("~/Content/bootstrap-toggle.less")
    </head>
    <body>
        @Html.AntiForgeryToken()
        <div class="main container-fluid">
            <div class="menu">
                @if (Model.horizontalMenu)
                {
                    Html.RenderPartial("Menu/_HorizontalMenu", Model);
                }
                <div class="col-lg-2 col-md-2 col-sm-2 col-xs-12">
                    @if (Model.verticalMenu)
                    {
                        Html.RenderPartial("Menu/_VerticalMenu", Model);
                    }
                </div>
            </div>
            <div class="container content col-lg-8 col-md-8 col-sm-8 col-xs-9">
                @Html.Partial("Template/_" + Model.Template)
                @if ((Model.AllowComments) && (Model.Comments != null))
                {
                    @Html.Partial("_Comments")
                }      
            </div>
            <div class="container" id="toolbar">
                <div id="toolPicture" class="btn btn-default btn-block"><span class="glyphicon glyphicon-picture toolbarSpan" /></div>
                <div id="toolVideo" class="btn btn-default btn-block"><span class="glyphicon glyphicon-film toolbarSpan" /></div>
                <div id="toolText" class="btn btn-default btn-block"><span class="glyphicon glyphicon-text-size toolbarSpan" /></div>
                <br />
                <input id="toggle-comment" type="checkbox" data-on="<span class='glyphicon glyphicon-comment toolbarSpan' /> On"
                       data-off="<span class='glyphicon glyphicon-comment toolbarSpan' /> Off"
                       @if (Model.AllowComments)
                       {
                            @Html.Raw("checked")
                       }
                        data-toggle="toggle" data-onstyle="default">
                <input id="toggle-rating" type="checkbox" data-on="<span class='glyphicon glyphicon-star toolbarSpan' /> On" style="margin-top:5px"
                       data-off="<span class='glyphicon glyphicon-star toolbarSpan' /> Off" 
                       @if (Model.AllowRating)
                       {
                            @Html.Raw("checked")
                       }
                        data-toggle="toggle" data-onstyle="default">
                <br /> <br />
                <button type="button" class="btn btn-default save btn-block"><span class="glyphicon glyphicon-floppy-disk toolbarSpan" /></button>
                <button type="button" class="btn btn-default delete btn-block"><span class="glyphicon glyphicon-trash toolbarSpan" /></button>
                <button type="button" class="btn btn-default saveSite btn-block"><span class="glyphicon glyphicon-log-out toolbarSpan" /></button>
            </div>
        </div> 
        @if (Model.AllowRating)
        {
            @Html.Partial("_Rating")
        }
        <footer class="footer">
            <div class="container">
                <p class="text-muted">@DateTime.Now.Year – @Resource.Footer </p>
            </div>
        </footer>
        <!-- Modal -->
        <div class="modal fade" id="myModal" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">

                </div>

            </div>
        </div>

        <script>
            var homePageDeletionError = "@Resource.HomePageDeletionError";
            var contentJSON = @Html.Raw(Model.ContentJson);
            var menuJSON = @Html.Raw(Model.MenuJson);
            var commentsAllow = false;
            @if (Model.AllowComments)
            {
                @Html.Raw("commentsAllow = true;");
            }
        </script>        
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/Scripts/mediaelement/mediaelement-and-player.min.js")
        @Scripts.Render("~/Scripts/jquery-ui-1.12.0.min.js")
        @Scripts.Render("~/Scripts/jquery.cropit.js")
        @Scripts.Render("~/Scripts/fill-script.js")
        @Scripts.Render("~/Scripts/save-script.js")
        @Scripts.Render("~/Scripts/editing-script.js")       
        @Scripts.Render("~/bundles/modernizr")
        @Scripts.Render("~/bundles/bootstrap")
        @Scripts.Render("~/Scripts/bootstrap-toggle.js")
        @Scripts.Render("~/Scripts/comments-script.js")
    </body>
</html>

