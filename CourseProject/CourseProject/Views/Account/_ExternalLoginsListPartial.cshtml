@model CourseProject.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security

<h4>Используйте для входа другую службу.</h4>
<hr />
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0) {
        <div>
            <p>
                Внешние службы проверки подлинности не настроены. В <a href="http://go.microsoft.com/fwlink/?LinkId=403804">этой статье</a>
                вы можете узнать о том, как в этом приложении ASP.NET настроить вход через внешние службы.
            </p>
        </div>
    }
    else {
        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl })) {
            @Html.AntiForgeryToken()
            <div id="socialLoginList">
                <p>
                    @*@foreach (AuthenticationDescription p in loginProviders) {
                        <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Войти с помощью учетной записи @p.Caption">@p.AuthenticationType</button>                  
                    }*@
                    <button type="submit" class="btn btn-default" style="width:100px" id="Vkontakte" name="provider" value="Vkontakte"><span class="fa fa-vk fa-5x"></span></button>
                    <button type="submit" class="btn btn-default" style="width:100px" id="Twitter" name="provider" value="Twitter"><span class="fa fa-twitter fa-5x"></span></button>
                    <button type="submit" class="btn btn-default" style="width:100px" id="Facebook" name="provider" value="Facebook"><span class="fa fa-facebook fa-5x"></span></button>

                </p>
            </div>
        }
    }
}
