@using CloudinaryDotNet
@using CourseProject.Environment
@using Resources

@model CourseProject.Models.ManageModel

@{
    ViewBag.Title = @Resource.ManageTitle;
}

<h2>@ViewBag.Title.</h2>

<div class="col-md-12 col-lg-12 col-md-12 col-xs-12">
    <h4>@Resource.PictureChanging</h4>
    <hr />
    <div class="row">
        <div class="image-editor" data-picture-src="@Model.Picture">
            <div class="row">
                <button id="browseBtn" style="float:left; margin-left:20px; font-size:20px;"><span class="glyphicon glyphicon-folder-open"></span></button>
                <input id="browseInput" type="file" class="cropit-image-input" style="visibility:hidden">
                <div id="rangeBlock" style="margin-top:10px;">
                    <span class="glyphicon glyphicon-search" style="float:left; margin:5px;"></span>
                    <input type="range" class="cropit-image-zoom-input" style="width:150px; float:left; margin:5px;">
                    <span class="glyphicon glyphicon-search" style="font-size:22px; margin-left:5px;"></span>
                </div>
            </div>

            <div class="cropit-preview"></div>
        </div>
    </div>
    <button class="export btn btn-default" hidden>@Resource.PictureSave</button>
</div>


<div class="col-md-12 col-lg-12 col-md-12 col-xs-12">
    <br>
    <h4>@Resource.PasswordChanging</h4>
    <hr />
    @using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary("", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(m => m.OldPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control login-input" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control login-input" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control login-input" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@Resource.PasswordSave" class="btn btn-default" />
            </div>
        </div>
    }
    <br />
</div>

<style>
    #browseInput{
        position: absolute; 
        top: -100px;
    }

    .cropit-preview {
        background-color: #f8f8f8;
        background-size: cover;
        border: 1px solid #ccc;
        border-radius: 3px;
        margin-top: 7px;
        width: 250px;
        height: 250px;
    }

    .cropit-preview-image-container {
        cursor: move;
    }

    .image-size-label {
        margin-top: 10px;
    }

    input, .export {
        display: block;
    }

    button {
        margin-top: 10px;
    }
</style>


@Scripts.Render("~/Scripts/jquery.cropit.js")
<script>
    $('#browseBtn').click(function () {
        $('#browseInput').click();
    });

    function dropImage(picUrl) {
        $('.image-editor').cropit({
            minZoom: 'fill',
            maxZoom: 1.5,
            initialZoom: 'image',
            smallImage: 'allow',
            imageState: {
                src: picUrl
            }
        });
    }

    function uploadPicture(imageData) {
        $.ajax({
            url: "/uploadPicture/",
            method: "POST",
            data: {
                pictureDataUrl: imageData,
                folder: "avatars"
            },
            success: function() {
                alert("Сохранено");
            }
        });
    }

    if ($('.image-editor').data("picture-src") != undefined) {
        dropImage($('.image-editor').data("picture-src"));
    } else {
        dropImage('');
    }

    $('.export').click(function () {
        var imageData = $('.image-editor').cropit('export', {
        type: 'image/jpeg',
            quality: .75
        });
        uploadPicture(imageData);
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
